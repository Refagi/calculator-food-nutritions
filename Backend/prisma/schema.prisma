// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              String       @id @default(uuid())
  name            String
  email           String      @unique
  password        String
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  isEmailVerified Boolean      @default(false)
  googleId        String?      @unique
  tokens          Token[]
}

model Token {
  id          String    @id @default(uuid())
  token       String    @db.VarChar(400)
  userId      String
  User        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  type        String
  expires     DateTime
  blacklisted Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Food {
  id         Int      @id @default(autoincrement())
  externalId Int?     @unique          // map dari CSV.id (optional)
  name       String   @unique
  calories   Float?
  protein    Float?   // map dari CSV 'proteins'
  carbs      Float?   // map dari CSV 'carbohydrate'
  fat        Float?
  image_url  String?  // map dari CSV 'image'
  createdAt  DateTime @default(now())

  @@map("foods")
  @@index([name])
}
